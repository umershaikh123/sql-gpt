 

import { NextResponse } from 'next/server';
 
import { promises as fsPromises } from 'fs';


interface Chat {
  id: string;
  title: string;
  messages: string[];
}

 
// // SQL code generated by the OpenAI model
// const generatedSqlCode = `...`; // Replace with the generated SQL code

// // File path and name for the new .sql file
// const filePath = 'path/to/file.sql';

// async function createSqlFile() {
//   try {
//     await fsPromises.writeFile(filePath, generatedSqlCode);
//     console.log('.sql file created successfully.');
//   } catch (err) {
//     console.error('Error creating .sql file:', err);
//   }
// }


// export async function GET(request:Request) {
   
//   try {
//     const fileData = await fsPromises.readFile('Text_ER_chats.json', 'utf-8');
//     const chats: Chat[] = JSON.parse(fileData);

//     return NextResponse.json(chats);
//   } catch (error) {
//     console.error(error);
//     return NextResponse.json({ result: 'Error retrieving chats' }, { status: 500 });
//   }
 
// }

// Function to extract SQL code from the conversation
function extractSqlCode(message: any) {
  let sqlCode = '';

  // Find the index of the opening ```sql tag
  const startIdx = message.indexOf('```sql');
  console.log("startIdx " , startIdx );
  

  if (startIdx !== -1) {
    // Find the index of the closing ``` tag after the opening ```sql tag
    const endIdx = message.indexOf('```', startIdx + 6);

    console.log("endIdx" , endIdx );

    if (endIdx !== -1) {
      // Extract the SQL code between the opening and closing tags
      sqlCode = message.substring(startIdx + 6, endIdx).trim();

       
      
    }
  }

  return sqlCode;

  // let sqlCode = '';
  // // console.log("conversation.messages.Messages " , conversation.messages.Messages);

  // // if (message.content.startsWith('```sql')) {
  // //   // Remove the code block markdown and extract the SQL code
  // //   sqlCode = message.content.replace(/^```sql|```$/g, ''); 
  // // }

  // console.log("message =" , message);
  // console.log("message.startsWith('```sql') = " ,message.startsWith("sql")  );

  // if (message && message.startsWith('```sql')) {
  //   // Remove the code block markdown and extract the SQL code
  //   sqlCode = message.content.replace(/^```sql|```$/g, '');
  // }

  // return sqlCode;
}



  // for (const message of conversation.messages.Messages) {
  //   console.log("special message " , message);
    
  //   if (message.role === 'assistant' && message.content.startsWith('```sql')) {
  //     // Remove the code block markdown and extract the SQL code
  //     sqlCode = message.content.replace(/^```sql|```$/g, '');
  //     break;
  //   }
  // }
// export async function POST(req:Request) {

  






//   try {
   
//     const resp = await req.json()
 
//   // const { chatId } = await req.json()
//   // const { messages } = await req.json()
 

// console.log("chatId : " , resp.chatID);
// console.log("messages " , resp.messages );


// // console.log("resp : " , resp);
 
//       return NextResponse.json({ log : 'SQL file generated successfully.' });
//     } 

  

        
//     catch (error) {
//       console.error(error);
//       NextResponse.json({ error: 'Failed to generate SQL file.' } , {status : 500});
//     }
  
// }



export async function POST(req:Request) {

  
  const resp= await req.json()
 
  const chatId  =  resp.chatID
  const  messages  =   resp.messages 

 

    const fileData = await fsPromises.readFile('Text_ER_chats.json', 'utf-8');
    const chats: Chat[] = JSON.parse(fileData);

 



  try {
    const chat = chats.find(chat => chat.id === chatId);

    // console.log("chat.messages = " , chat?.messages);
    


    if (chat) {
      let lastAIMessageContent = null;
      console.log("messages.length" , messages.length);
      
    for (let i = messages.length - 1; i >= 0; i--) {
      if (messages[i].role === 'assistant') {
        lastAIMessageContent = messages[i].content;
        break;
      }
    }

    console.log("lastAIMessageContent =" , lastAIMessageContent);
    

      // Extract SQL code from the conversation
      const sqlCode = extractSqlCode(lastAIMessageContent);
      console.log(" sqlCode " , sqlCode);
      // Generate a timestamp-based filename for the SQL file
      // const fileName = `sql-file-${Date.now()}.sql`;
 
      const folderPath = 'Files/SQL_Files'; // Replace with the desired folder path
const fileName = `sql-file-${Date.now()}.sql`;
const filePath = `${folderPath}/${fileName}`;
  
      // Write the SQL code to the file
        await fsPromises.writeFile(filePath, sqlCode);
  
      NextResponse.json({ message: 'SQL file generated successfully.', fileName });


    //   const requestBody = {
    //     file,
    //     filePath
    //   }
    
    //   try {
    //  const response =  await fetch('/api/dbDiagram', {
    //     method: 'POST',
    //     body: JSON.stringify({
    //       filePath
    //     }),
    //     headers: {
    //       'Content-Type': 'application/json',
    //     },
    //   });

    // }
    // catch (error) {
    //   console.error("error with creating ER file" ,error)
    
    // }


    } 

    }

        
    catch (error) {
      console.error(error);
      NextResponse.json({ error: 'Failed to generate SQL file.' } , {status : 500});
    }
  
}

//   let lastUserMessageContent = null;
//   console.log("messages.length" , messages.length);
  
// for (let i = messages.length - 1; i >= 0; i--) {
//   if (messages[i].role === 'assistant') {
//     lastUserMessageContent = messages[i].content;
//     break;
//   }
// }

// console.log("lastUserMessageContent" , lastUserMessageContent);

// const assistantResponse = lastUserMessageContent




  // try {
  //   const fileData = await fsPromises.readFile('Text_ER_chats.json', 'utf-8');
  //   const chats: Chat[] = JSON.parse(fileData);

  //   const chat = chats.find(chat => chat.id === chatId)

  //    if(chat) {
  //     const userMessage = chat.messages.Messages.find(
  //       message => message.role === 'user'
  //     )
  //     if (userMessage) {
  //       const userMessageContent = userMessage.content
  //       console.log(userMessageContent)
  //     } else {
  //       console.log('No user message found in chat messages.')
  //     }

  //    }

  
  // } catch (error) {
  //   console.error(error);
     
  // }


  // const  Code = await request.json();
  // const generatedSqlCode = `${Code}`; // Replace with the generated SQL code
  
  // // File path and name for the new .sql file
  // const filePath = './schema.sql';


  // try {
  //   await fsPromises.writeFile(filePath, generatedSqlCode);
  //   console.log('.sql file created successfully.');
  // } catch (err) {
  //   console.error('Error creating .sql file:', err);
  // }

  // }

 
 