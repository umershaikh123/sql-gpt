 

import { NextResponse } from 'next/server';
 
 
// import { Pool } from 'mysql';
// import { Pool } from '@/lib/db';

const mysql = require('mysql')

const Pool = mysql.createPool({
  host: 'localhost',
  user: 'root',
  password: '123456',
  database: 'demo',
});

// Define the SQL statements to create the tables
const createTablesQuery = `
  CREATE TABLE Employee (
    employee_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50)
  );

  CREATE TABLE Customer (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50)
  );

  CREATE TABLE Part (
    part_id INT PRIMARY KEY,
    part_name VARCHAR(50),
    price FLOAT,
    quantity_in_stock INT
  );

  CREATE TABLE \`Order\` (
    order_id INT PRIMARY KEY,
    customer_id INT,
    employee_id INT,
    date_of_receipt DATE,
    expected_ship_date DATE,
    actual_ship_date DATE,
    FOREIGN KEY (customer_id) REFERENCES Customer(customer_id),
    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
  );

  CREATE TABLE OrderPart (
    order_part_id INT PRIMARY KEY,
    order_id INT,
    part_id INT,
    quantity INT,
    FOREIGN KEY (order_id) REFERENCES \`Order\`(order_id),
    FOREIGN KEY (part_id) REFERENCES Part(part_id)
  );
`;

 

 

export async function GET(request: Request) {
    try {
        await  Pool.query(createTablesQuery);
        NextResponse.json({ message: 'Tables initialized successfully.' } , { status: 200 } );
      } catch (error) {
        console.error('Error initializing tables:', error);
        NextResponse.json({ error: 'Internal Server Error' }, { status: 500 } );
      } finally {
        Pool.end(); // Close the MySQL connection pool
      }
 
}


const fs = require('fs');

// SQL code generated by the OpenAI model
const generatedSqlCode = `...`; // Replace with the generated SQL code

// File path and name for the new .sql file
const filePath = 'path/to/file.sql';

// Write the SQL code to the .sql file
fs.writeFile(filePath, generatedSqlCode, (err) => {
  if (err) {
    console.error('Error creating .sql file:', err);
    return;
  }
  console.log('.sql file created successfully.');
});

 